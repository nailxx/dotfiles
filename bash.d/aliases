#!/bin/bash

alias ls='ls --color=auto'
alias ll='ls -l'
alias la='ls -A'

alias grep='grep --color=auto'

alias rmpyc='find -name "*.pyc" -delete'
mkpydir() { mkdir $1 && touch $1/__init__.py; }

alias speedtest='wget --output-document=/dev/null http://speedtest.wdc01.softlayer.com/downloads/test500.zip'

alias o='gnome-open 2>&1 > /dev/null'

# Activate python environment
alias pya='source ../bin/activate'

# Common typos
alias kilall='killall'

# MongoDB
mongorepair() {
    sudo rc.d stop mongodb;
    sudo rm -rf /var/lib/mongodb/mongod.lock && \
        sudo -u mongodb mongod --dbpath=/var/lib/mongodb --repair && \
        sudo rc.d start mongodb;
}

mongoundump() {
    rm -r mongo-dump;
    tar xf `ls | tail -n1`;
    mongorestore --drop mongo-dump;
}

mongograb() {
    DUMP_NAME=mongo-dump;
    pushd /tmp;
    echo "Dumping $2..."
    ssh $1 "cd /tmp && rm -rf $DUMP_NAME && mongodump --out $DUMP_NAME --db $2 && tar czf DUMP_NAME.tgz $DUMP_NAME" && \
        echo "Downloading..." && \
        scp $1:/tmp/DUMP_NAME.tgz . && \
        tar xzf DUMP_NAME.tgz && \
        echo "Restoring..." && \
        mongorestore --drop $DUMP_NAME;
    popd;
}

# PostgreSQL
pggrab() {
    pushd /tmp;
    echo "Dumping $2..."
    ssh $1 "cd /tmp && pg_dump $2 > pg_dump.sql && tar czf pg_dump.tgz pg_dump.sql" && \
        echo "Downloading..." && \
        scp $1:/tmp/pg_dump.tgz . && \
        tar xzf pg_dump.tgz && \
        echo "Restoring..." && \
        dropdb --if-exists $2 && \
        createdb -T template0 $2 && \
        psql --set ON_ERROR_STOP=on $2 < pg_dump.sql;
    popd;
}

# Services
alias start='sudo systemctl start'
alias stop='sudo systemctl stop'
alias restart='sudo systemctl restart'
